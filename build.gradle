import proguard.gradle.ProGuardTask

group 'com.chronpwn'
version '1.0'

buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
        flatDir dirs: 'lib'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ':proguard'
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
}

ext {
    junitJupiterApiVersion = '5.0.0-M4'
    junitJupiterVersion = '5.0.0-M4'
    junitVintageVersion = '4.12.0-M4'
    junitPlatformVersion = '1.0.0-M4'
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'


    compile 'org.apache.tomcat:tomcat-dbcp:8.0.30'
    compile 'com.h2database:h2'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    testCompile group: 'junit', name: 'junit', version: '4.11'

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterApiVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
}

task proguard(type: ProGuardTask) {
    
    configuration 'proguard.pro'
    
    injars jar
    outjars 'build/libs/obfuscated.jar'


    printmapping 'build/mapping.txt'
    dump 'build/dump.txt'

}
